== PrisonerDilemma ==

A simple implementation of the classic Prisoner's Dilemma problem



== TO - DO ==


*have a good think about the two approaches of play
*convert the plead guilty/non-guilty to a form rather than two links

*separate admin from regular play

*try to think abotu ways of breaking authentiation
**try to paste in URL's
**mess with session variables...try out tamper data

*BUG - when submitting three names it doesn't complain :(

*use label tags where appropriate

*have a think about CSRF and escaping of input

*make prisoner list and game list sortable...jquery???

*allow player to revise their decision as long as the other player hasn't gone

*have a think about real time play and how to improve....not require refreshing every few seconds






Further study
*study and improve with CSS
*study and improve with jQuery
*make a mobile version???














== DONE (sorted by date in descending order) ==


*modify games views/controllers to allow the adding of prisoners
*create is_admin attribute for prisoner

*authentication
**add password to the edit and create prisoner forms
**set up an access controller
**set everyone's password to "test" but with different salt
**set up some login views
**put filters in appropriate places
March 28th
**set up a virtual attribute, "password"
*more descriptive output when password is too short... now it is very confusing... silent error

**added attribute protection
**set up some convenient salting and hashing functions

**migrate Users to have fields necessary for user authentication, put in separate migration

*Add links "modify pris" and "modify games" so you can go anywhere
*Feb 23 2012

*decided to store game/player information in URL

* change display play_game based on game state

* get plead guilty to update database successfully

* fix things so that you see only games that belong to a certain user

* is there a better way to relate two players to a game without order?
** how do relationships work in this situation?

